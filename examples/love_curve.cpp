//
// Created by zjzjzjzj1874 on 2024/10/25.
//

#include <iostream>
#include "love_curve.h"

using namespace std;

void love_curve() {
    cout << "========================Love Cruve========================\n";
    // 爱心曲线方程：(x^2 + y^2 - a)^3 - x^2*y^3 = 0;
    double a = 0.5;

    // 定义绘图边界
    double bound = 1.3*(sqrt(a));

    // 定义坐标步长()
    double s = 0.05;

    // 二维扫描所有点，逐行扫描
    for (double y = bound; y >= -bound; y -= s) {
        for (double x = -bound; x <= bound; x += 0.3*s) {
            double t = x*x + y*y - a;
            if (t*t*t < x*x*y*y*y) {
                cout << "*";
            } else {
                cout << " ";
            }
        }
        cout << endl;
    }
}
/*
*
* 输出为：
                     ****************************                          ***************************
                ***************************************              **************************************
             **********************************************      *********************************************
           ******************************************************************************************************
         *********************************************************************************************************
        ************************************************************************************************************
       **************************************************************************************************************
      ***************************************************************************************************************
      ***************************************************************************************************************
      ***************************************************************************************************************
      ***************************************************************************************************************
       **************************************************************************************************************
        ************************************************************************************************************
        ***********************************************************************************************************
         *********************************************************************************************************
           ******************************************************************************************************
            ***************************************************************************************************
              ************************************************************************************************
                ********************************************************************************************
                  ****************************************************************************************
                    ***********************************************************************************
                       ******************************************************************************
                          ************************************************************************
                             ******************************************************************
                                ***********************************************************
                                    ****************************************************
                                        ********************************************
                                            ***********************************
                                                 **************************
                                                     *****************
                                                          ********
                                                             **

 * */